/////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
Author      : Chandan Bhatia
Device      : Tiva C Series microcontroller TM4C123G
Description : Switchs will high signal to Led whenever they are pressd. Switchs activity will be done
              using Falling edge Interrupt. Swiches are connected at PORTF4 and PORTF0. Led is on PORTF3.
              
*/
//////////////////////////////////////////////////////////////////////////////////////////////////////////

//Constant declarations 

#define GPIO_PORTF_DATA_R       (*((volatile unsigned long *)0x400253FC))
#define GPIO_PORTF_LOCK_R       (*((volatile unsigned long *)0x40025520))
#define GPIO_PORTF_CR_R         (*((volatile unsigned long *)0x40025524))
#define NVIC_EN0_R              (*((volatile unsigned long *)0xE000E100))  // IRQ 0 to 31 Set Enable Register
#define NVIC_PRI7_R             (*((volatile unsigned long *)0xE000E41C))  // IRQ 28 to 31 Priority Register
#define GPIO_PORTF_DIR_R        (*((volatile unsigned long *)0x40025400))
#define GPIO_PORTF_IS_R         (*((volatile unsigned long *)0x40025404))
#define GPIO_PORTF_IBE_R        (*((volatile unsigned long *)0x40025408))
#define GPIO_PORTF_IEV_R        (*((volatile unsigned long *)0x4002540C))
#define GPIO_PORTF_IM_R         (*((volatile unsigned long *)0x40025410))
#define GPIO_PORTF_RIS_R        (*((volatile unsigned long *)0x40025414))
#define GPIO_PORTF_ICR_R        (*((volatile unsigned long *)0x4002541C))
#define GPIO_PORTF_AFSEL_R      (*((volatile unsigned long *)0x40025420))
#define GPIO_PORTF_PUR_R        (*((volatile unsigned long *)0x40025510))
#define GPIO_PORTF_PDR_R        (*((volatile unsigned long *)0x40025514))
#define GPIO_PORTF_DEN_R        (*((volatile unsigned long *)0x4002551C))
#define GPIO_PORTF_AMSEL_R      (*((volatile unsigned long *)0x40025528))
#define GPIO_PORTF_PCTL_R       (*((volatile unsigned long *)0x4002552C))
#define SYSCTL_RCGC2_R          (*((volatile unsigned long *)0x400FE108))


void EnableInterrupts(void);  // Enable interrupts
void Delay(unsigned long time);  // Delay function
void EdgeInt_Init (void);        // Function Prototypes
unsigned long SW1;


void GPIOPortF_Handler(void){
	GPIO_PORTF_IM_R |= 0x00;
	if(GPIO_PORTF_RIS_R&0x10){    // poll PF4
		
    GPIO_PORTF_ICR_R = 0x10;    // acknowledge flag4
		GPIO_PORTF_DATA_R=0x08;
	  Delay(1);
  }
  if(GPIO_PORTF_RIS_R&0x01){  // poll PF0
    GPIO_PORTF_ICR_R = 0x01;  // acknowledge flag0
    GPIO_PORTF_DATA_R=0x08;
	  Delay(1);
  }	
	GPIO_PORTF_IM_R |= 0x11;
	 	
}

int main(void){
  EdgeInt_Init();           // initialize GPIO Port F interrupt
  while(1){
		GPIO_PORTF_DATA_R=0x00;
  }
}

void EdgeInt_Init(void){         
		
  SYSCTL_RCGC2_R |= 0x00000020;     //  activate clock for port F
  GPIO_PORTF_DIR_R &= ~0x11;        //  make PF4 and PF1 input 
	GPIO_PORTF_LOCK_R = 0x4C4F434B;   //  unlock PortF PF0  
  GPIO_PORTF_CR_R = 0x1F;           //  allow changes to PF4-0  
	GPIO_PORTF_DIR_R |= 0x08;         //  PF3 output 
  GPIO_PORTF_AFSEL_R &= ~0x11;      //  disable alt funct on PF4
  GPIO_PORTF_DEN_R |= 0x19;         //  enable digital I/O on PF4   
  GPIO_PORTF_PCTL_R &= ~0x000F000F; //  configure PF4 and PF1 as GPIO
  GPIO_PORTF_AMSEL_R = 0x00;        //  disable analog functionality on PF
  GPIO_PORTF_PUR_R |= 0x11;         //  enable  pull-up on PF4 and PF1
  GPIO_PORTF_IS_R &= ~0x11;         //  PF4 and PF1 is edge-sensitive
  GPIO_PORTF_IBE_R &= ~0x11;        //  PF4 and PF1 is not both edges
  GPIO_PORTF_IEV_R &= ~0x11;        //  PF4 and PF1 falling edge event
  GPIO_PORTF_ICR_R = 0x10;          //  Clear flag4
	GPIO_PORTF_ICR_R = 0x01;          //  lear flag0
  GPIO_PORTF_IM_R |= 0x11;          // arm interrupt on PF4 and PF0
  NVIC_PRI7_R = (NVIC_PRI7_R&0xFF00FFFF)|0x00400000; // priority 2
  NVIC_EN0_R = 0x40000000;          //  enable interrupt 30 in NVIC
  EnableInterrupts();              //   Clears the I bit
}
void Delay(unsigned long time){
  unsigned long i;
  while(time > 0){
    i = 133333;  
    while(i > 0){
      i = i - 1;
    }
    time = time - 1; 
  }
}

